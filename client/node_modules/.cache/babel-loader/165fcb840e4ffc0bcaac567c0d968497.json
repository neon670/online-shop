{"ast":null,"code":"import _objectSpread from \"/Users/noe/vagrant-lamp/sites/online-store/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nconst config = {\n  apiKey: \"AIzaSyAWUT04ZW4XjFLx61R0oIv73U7IF8uo1bU\",\n  authDomain: \"online-shopdb.firebaseapp.com\",\n  databaseURL: \"https://online-shopdb.firebaseio.com\",\n  projectId: \"online-shopdb\",\n  storageBucket: \"\",\n  messagingSenderId: \"378216322491\",\n  appId: \"1:378216322491:web:6a310e2b26669223\"\n};\nexport const createUserProfileDocument = async (userAuth, addtionalData) => {\n  if (!userAuth) return;\n  const userRef = firestore.doc(\"(users/\".concat(userAuth.uid, \")\"));\n  const snapShop = await userRef.get();\n\n  if (!snapShop.exists) {\n    const displayName = userAuth.displayName,\n          email = userAuth.email;\n    const createdAt = new Date();\n\n    try {\n      await userRef.set(_objectSpread({\n        displayName,\n        email,\n        createdAt\n      }, addtionalData));\n    } catch (error) {\n      console.log('error creating user', error.message);\n    }\n  }\n\n  return userRef;\n};\nfirebase.initializeApp(config);\nexport const convertCollectionsSnapchotToMap = collections => {\n  const transformedCollection = collections.docs.map(doc => {\n    const _doc$data = doc.data(),\n          title = _doc$data.title,\n          items = _doc$data.items;\n\n    return {\n      routeName: encodeURI(title.toLowerCase()),\n      id: doc.id,\n      title,\n      items\n    };\n  });\n  return transformedCollection.reduce((accumalator, collection) => {\n    accumalator[collection.title.toLowerCase()] = collection;\n    return accumalator;\n  }, {});\n};\nexport const getCurrentUser = () => {\n  return new Promise((resovle, reject) => {\n    const unsubscribe = auth.onAuthStateChanged(userAuth => {\n      unsubscribe();\n      resolve(userAuth);\n    }, reject);\n  });\n};\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nexport const googleProvider = new firebase.auth.GoogleAuthProvider();\ngoogleProvider.setCustomParameters({\n  prompt: 'select_account'\n});\nexport const signInWithGoogle = () => auth.signInWithPopup(googleProvider);\nexport default firebase;","map":{"version":3,"sources":["/Users/noe/vagrant-lamp/sites/online-store/src/firebase/firebase.utils.js"],"names":["firebase","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","createUserProfileDocument","userAuth","addtionalData","userRef","firestore","doc","uid","snapShop","get","exists","displayName","email","createdAt","Date","set","error","console","log","message","initializeApp","convertCollectionsSnapchotToMap","collections","transformedCollection","docs","map","data","title","items","routeName","encodeURI","toLowerCase","id","reduce","accumalator","collection","getCurrentUser","Promise","resovle","reject","unsubscribe","auth","onAuthStateChanged","resolve","googleProvider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":"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","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\nconst config = {\n    apiKey: \"AIzaSyAWUT04ZW4XjFLx61R0oIv73U7IF8uo1bU\",\n    authDomain: \"online-shopdb.firebaseapp.com\",\n    databaseURL: \"https://online-shopdb.firebaseio.com\",\n    projectId: \"online-shopdb\",\n    storageBucket: \"\",\n    messagingSenderId: \"378216322491\",\n    appId: \"1:378216322491:web:6a310e2b26669223\"\n  }\n\n  export const createUserProfileDocument = async(userAuth, addtionalData ) =>{\n    if(!userAuth) return;\n\n    const userRef = firestore.doc(`(users/${userAuth.uid})`);\n    const snapShop = await userRef.get();\n    \n    if(!snapShop.exists){\n      const { displayName, email } = userAuth;\n      const createdAt = new Date();\n\n      try{\n        await userRef.set({\n          displayName,\n          email,\n          createdAt,\n          ...addtionalData\n        })\n      }catch(error){\n        console.log('error creating user', error.message);\n      }\n    }\n    return userRef;\n  };\n\n  firebase.initializeApp(config);\n\n export const convertCollectionsSnapchotToMap = (collections) => {\n   const transformedCollection = collections.docs.map(doc => {\n     const { title, items } = doc.data();\n     return{\n       routeName: encodeURI(title.toLowerCase()),\n       id: doc.id,\n       title,\n       items\n     };\n   });\n   return transformedCollection.reduce((accumalator, collection) => {\n  accumalator[collection.title.toLowerCase()] = collection;\n  return accumalator;\n  }, {});\n };\n\nexport const getCurrentUser = () => {\n  return new Promise ((resovle, reject) => {\n    const unsubscribe = auth.onAuthStateChanged(userAuth => {\n      unsubscribe();\n      resolve(userAuth);\n    }, reject)\n  })\n}\n\n\n\n  export const auth = firebase.auth();\n  export const firestore = firebase.firestore();\n\n  export const googleProvider = new firebase.auth.GoogleAuthProvider();\n  googleProvider.setCustomParameters({prompt: 'select_account'});\n  export const signInWithGoogle = () => auth.signInWithPopup(googleProvider);\n\n\n  export default firebase;\n"]},"metadata":{},"sourceType":"module"}