{"ast":null,"code":"var _jsxFileName = \"/Users/noe/vagrant-lamp/sites/online-store/src/pages/shop/shop.jsx\";\nimport React from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport CollectionsOverview from '../../components/collection-overview/collection-overview';\nimport CollectionPage from '../collection/collection';\nimport { firestore, convertCollectionsSnapchotToMap } from '../../firebase/firebase.utils';\nimport { ShopActionTypes } from '../shop/shop.actions';\n\nclass ShopPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.unsubscribefromSnapshot = null;\n  }\n\n  componentDidMount() {\n    const collectionRef = firestore.collection('collections');\n    collectionRef.onSnapshot(async snapshot => {\n      convertCollectionsSnapchotToMap(snapshot);\n    });\n  }\n\n  render() {\n    const match = this.props.match;\n    return React.createElement(\"div\", {\n      className: \"shop-page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"\".concat(match.path),\n      component: CollectionsOverview,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"\".concat(match.path, \"/:collectionId\"),\n      component: CollectionPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  updateCollections: collectionsMap => dispatch(updateCollections(collection))\n});\n\nexport default ShopPage;","map":{"version":3,"sources":["/Users/noe/vagrant-lamp/sites/online-store/src/pages/shop/shop.jsx"],"names":["React","Route","connect","CollectionsOverview","CollectionPage","firestore","convertCollectionsSnapchotToMap","ShopActionTypes","ShopPage","Component","unsubscribefromSnapshot","componentDidMount","collectionRef","collection","onSnapshot","snapshot","render","match","props","path","mapDispatchToProps","dispatch","updateCollections","collectionsMap"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,mBAAP,MAAgC,0DAAhC;AACA,OAAOC,cAAP,MAA2B,0BAA3B;AACA,SAASC,SAAT,EAAoBC,+BAApB,QAA2D,+BAA3D;AACA,SAAQC,eAAR,QAA8B,sBAA9B;;AACA,MAAMC,QAAN,SAAuBR,KAAK,CAACS,SAA7B,CAAuC;AAAA;AAAA;AAAA,SACtCC,uBADsC,GACZ,IADY;AAAA;;AAGtCC,EAAAA,iBAAiB,GAAE;AAClB,UAAMC,aAAa,GAAGP,SAAS,CAACQ,UAAV,CAAqB,aAArB,CAAtB;AACAD,IAAAA,aAAa,CAACE,UAAd,CAAyB,MAAMC,QAAN,IAAkB;AAC1CT,MAAAA,+BAA+B,CAACS,QAAD,CAA/B;AACA,KAFD;AAGA;;AAEDC,EAAAA,MAAM,GAAE;AAAA,UACCC,KADD,GACW,KAAKC,KADhB,CACCD,KADD;AAEP,WACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,YAAKA,KAAK,CAACE,IAAX,CAAjB;AAAoC,MAAA,SAAS,EAAEhB,mBAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,KAAD;AAAO,MAAA,IAAI,YAAKc,KAAK,CAACE,IAAX,mBAAX;AAA4C,MAAA,SAAS,EAAEf,cAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF;AAMA;;AAlBqC;;AAqBvC,MAAMgB,kBAAkB,GAAGC,QAAQ,KAAK;AACvCC,EAAAA,iBAAiB,EAAEC,cAAc,IAAIF,QAAQ,CAACC,iBAAiB,CAACT,UAAD,CAAlB;AADN,CAAL,CAAnC;;AAIA,eAAeL,QAAf","sourcesContent":["import React from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport CollectionsOverview from '../../components/collection-overview/collection-overview';\nimport CollectionPage from '../collection/collection';\nimport { firestore, convertCollectionsSnapchotToMap } from '../../firebase/firebase.utils';\nimport {ShopActionTypes} from '../shop/shop.actions';\nclass ShopPage extends React.Component {\n\tunsubscribefromSnapshot = null;\n\n\tcomponentDidMount(){\n\t\tconst collectionRef = firestore.collection('collections');\n\t\tcollectionRef.onSnapshot(async snapshot => {\n\t\t\tconvertCollectionsSnapchotToMap(snapshot);\n\t\t})\n\t}\n\n\trender(){\n\t\tconst { match } = this.props; \n\t\treturn (\n\t\t  <div className='shop-page'>\n\t\t    <Route exact path={`${match.path}`} component={CollectionsOverview} />\n\t\t    <Route path={`${match.path}/:collectionId`} component={CollectionPage} />\n\t\t  </div>\n\t\t);\n\t}\n}\n\nconst mapDispatchToProps = dispatch => ({\n\tupdateCollections: collectionsMap => dispatch(updateCollections(collection))\n})\n\nexport default ShopPage;"]},"metadata":{},"sourceType":"module"}