{"ast":null,"code":"import { takeEvery } from 'redux-saga/effects';\nimport ShopActionTypes from './shop.type';\nimport { firestore, convertCollectionsSnapchotToMap } from '../../firebase/firebase.utils';\nexport function* fetchCollectionAsync() {\n  yield console.log('I am fired');\n  const collectionRef = firestore.collection('collections');\n  collectionRef.get().then(snapshot => {\n    const collectionsMap = convertCollectionsSnapchotToMap(snapshot);\n    dispatch(fetchCollectionsSuccess(collectionsMap));\n  }).catch(error => dispatch(fetchCollectionsFailure(error.message)));\n}\nexport function* fetchCollectionsStart() {\n  yield takeEvery(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionAsync);\n}","map":{"version":3,"sources":["/Users/noe/vagrant-lamp/sites/online-store/src/redux/shop/shop.sagas.js"],"names":["takeEvery","ShopActionTypes","firestore","convertCollectionsSnapchotToMap","fetchCollectionAsync","console","log","collectionRef","collection","get","then","snapshot","collectionsMap","dispatch","fetchCollectionsSuccess","catch","error","fetchCollectionsFailure","message","fetchCollectionsStart","FETCH_COLLECTIONS_START"],"mappings":"AAAA,SAASA,SAAT,QAA0B,oBAA1B;AACA,OAAOC,eAAP,MAA6B,aAA7B;AACA,SAASC,SAAT,EAAoBC,+BAApB,QAA2D,+BAA3D;AAGA,OAAO,UAAUC,oBAAV,GAAgC;AACtC,QAAMC,OAAO,CAACC,GAAR,CAAY,YAAZ,CAAN;AACA,QAAMC,aAAa,GAAGL,SAAS,CAACM,UAAV,CAAqB,aAArB,CAAtB;AAECD,EAAAA,aAAa,CAACE,GAAd,GAAoBC,IAApB,CAA0BC,QAAQ,IAAI;AACrC,UAAMC,cAAc,GAAGT,+BAA+B,CAACQ,QAAD,CAAtD;AACAE,IAAAA,QAAQ,CAACC,uBAAuB,CAACF,cAAD,CAAxB,CAAR;AACA,GAHD,EAGGG,KAHH,CAGSC,KAAK,IAAGH,QAAQ,CAACI,uBAAuB,CAACD,KAAK,CAACE,OAAP,CAAxB,CAHzB;AAID;AAED,OAAO,UAAUC,qBAAV,GAAiC;AACvC,QAAMnB,SAAS,CAACC,eAAe,CAACmB,uBAAjB,EAA0ChB,oBAA1C,CAAf;AACA","sourcesContent":["import { takeEvery } from 'redux-saga/effects';\nimport ShopActionTypes  from './shop.type';\nimport { firestore, convertCollectionsSnapchotToMap } from '../../firebase/firebase.utils';\n\n\nexport function* fetchCollectionAsync(){\n\tyield console.log('I am fired');\n\tconst collectionRef = firestore.collection('collections');\n\n\t\tcollectionRef.get().then( snapshot => {\n\t\t\tconst collectionsMap = convertCollectionsSnapchotToMap(snapshot);\n\t\t\tdispatch(fetchCollectionsSuccess(collectionsMap));\n\t\t}).catch(error=> dispatch(fetchCollectionsFailure(error.message)));\n}\n\nexport function* fetchCollectionsStart(){\n\tyield takeEvery(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionAsync);\n}"]},"metadata":{},"sourceType":"module"}