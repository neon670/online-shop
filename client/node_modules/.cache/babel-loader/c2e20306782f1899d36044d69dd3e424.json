{"ast":null,"code":"var _jsxFileName = \"/Users/noe/vagrant-lamp/sites/online-store/src/pages/collection/collection.jsx\";\nimport React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport CollectionItem from '../../components/collection-item/collection-item';\nimport { selectCollection } from '../../redux/shop/shop.selector';\nimport { CollectionPageContainer, CollectionTitle, CollectionItemsContainer } from './collection-styles';\n\nconst CollectionPage = ({\n  collection\n}) => {\n  useEffect(() => {\n    console.log('i am subscribing');\n    const unsubscribeFromCollections = firestore.collection('collections').onSnapshot(snapshot => console.log(snapshot));\n    return () => {\n      console.log('i am unscribing');\n      unsubscribeFromCollections();\n    };\n  }, []);\n  const title = collection.title,\n        items = collection.items;\n  return React.createElement(CollectionPageContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(CollectionTitle, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, title), React.createElement(CollectionItemsContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, items.map(item => React.createElement(CollectionItem, {\n    key: item.id,\n    item: item,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }))));\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n  collection: selectCollection(ownProps.match.params.collectionId)(state)\n});\n\nexport default connect(mapStateToProps)(CollectionPage);","map":{"version":3,"sources":["/Users/noe/vagrant-lamp/sites/online-store/src/pages/collection/collection.jsx"],"names":["React","useEffect","connect","CollectionItem","selectCollection","CollectionPageContainer","CollectionTitle","CollectionItemsContainer","CollectionPage","collection","console","log","unsubscribeFromCollections","firestore","onSnapshot","snapshot","title","items","map","item","id","mapStateToProps","state","ownProps","match","params","collectionId"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,cAAP,MAA2B,kDAA3B;AACA,SAASC,gBAAT,QAAiC,gCAAjC;AAEA,SAASC,uBAAT,EAAiCC,eAAjC,EAAiDC,wBAAjD,QAAiF,qBAAjF;;AAEA,MAAMC,cAAc,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAoB;AAEzCR,EAAAA,SAAS,CAAC,MAAK;AACbS,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACA,UAAMC,0BAA0B,GAAGC,SAAS,CAACJ,UAAV,CAAqB,aAArB,EAAoCK,UAApC,CAA+CC,QAAQ,IAAIL,OAAO,CAACC,GAAR,CAAYI,QAAZ,CAA3D,CAAnC;AAEE,WAAO,MAAM;AACXL,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACAC,MAAAA,0BAA0B;AAC3B,KAHD;AAIH,GARQ,EAQN,EARM,CAAT;AAFyC,QAYjCI,KAZiC,GAYhBP,UAZgB,CAYjCO,KAZiC;AAAA,QAY1BC,KAZ0B,GAYhBR,UAZgB,CAY1BQ,KAZ0B;AAczC,SACG,oBAAC,uBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAkBD,KAAlB,CADD,EAEC,oBAAC,wBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,KAAK,CAACC,GAAN,CAAUC,IAAI,IACb,oBAAC,cAAD;AAAgB,IAAA,GAAG,EAAEA,IAAI,CAACC,EAA1B;AAA8B,IAAA,IAAI,EAAED,IAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADH,CAFD,CADH;AAUD,CAxBD;;AA0BA,MAAME,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,MAAsB;AAC5Cd,EAAAA,UAAU,EAAEL,gBAAgB,CAACmB,QAAQ,CAACC,KAAT,CAAeC,MAAf,CAAsBC,YAAvB,CAAhB,CAAqDJ,KAArD;AADgC,CAAtB,CAAxB;;AAIA,eAAepB,OAAO,CAACmB,eAAD,CAAP,CAAyBb,cAAzB,CAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport CollectionItem from '../../components/collection-item/collection-item';\nimport { selectCollection } from '../../redux/shop/shop.selector';\n\nimport { CollectionPageContainer,CollectionTitle,CollectionItemsContainer } from './collection-styles';\n\nconst CollectionPage = ({ collection }) => {\n\n  useEffect(() =>{\n    console.log('i am subscribing');\n    const unsubscribeFromCollections = firestore.collection('collections').onSnapshot(snapshot => console.log(snapshot));  \n\n      return () => {\n        console.log('i am unscribing');\n        unsubscribeFromCollections();\n      }\n  }, []);\n  \n  const { title, items } = collection;\n\n  return (\n     <CollectionPageContainer>\n      <CollectionTitle>{title}</CollectionTitle>\n      <CollectionItemsContainer>\n        {items.map(item => (\n          <CollectionItem key={item.id} item={item} />\n        ))}\n      </CollectionItemsContainer>\n    </CollectionPageContainer>\n  );\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n  collection: selectCollection(ownProps.match.params.collectionId)(state)\n});\n\nexport default connect(mapStateToProps)(CollectionPage);"]},"metadata":{},"sourceType":"module"}