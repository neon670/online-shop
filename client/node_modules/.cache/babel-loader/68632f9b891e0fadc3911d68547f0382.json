{"ast":null,"code":"var _jsxFileName = \"/Users/noe/vagrant-lamp/sites/online-store/src/pages/shop/shop.jsx\";\nimport React from 'react';\nimport { Route } from 'react-router-dom';\nimport { createStructuredSelector } from 'reselect';\nimport { connect } from 'react-redux';\nimport CollectionOverviewContainer from '../../components/collection-overview/collection-overview-container';\nimport CollectionPage from '../collection/collection';\nimport { fetchCollectionsStartAsync } from '../../redux/shop/shop.actions';\nimport { selectIsCollectionFetching, selecIsCollectionsLoaded } from '../../redux/shop/shop.selector';\nimport WithSpinner from '../../components/spinner/spinner';\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nclass ShopPage extends React.Component {\n  componentDidMount() {\n    const fetchCollectionsStartAsync = this.props.fetchCollectionsStartAsync;\n    fetchCollectionsStartAsync();\n  }\n\n  render() {\n    const _this$props = this.props,\n          match = _this$props.match,\n          IsCollectionFetching = _this$props.IsCollectionFetching,\n          isCollectionsLoaded = _this$props.isCollectionsLoaded;\n    return React.createElement(\"div\", {\n      className: \"shop-page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"\".concat(match.path),\n      component: CollectionOverviewContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"\".concat(match.path, \"/:collectionId\"),\n      render: props => React.createElement(CollectionPageWithSpinner, Object.assign({\n        isLoading: !isCollectionsLoaded\n      }, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = createStructuredSelector({\n  IsCollectionFetching: selectIsCollectionFetching,\n  isCollectionsLoaded: selecIsCollectionsLoaded\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync())\n});\n\nexport default connect(null, mapStateToProps, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["/Users/noe/vagrant-lamp/sites/online-store/src/pages/shop/shop.jsx"],"names":["React","Route","createStructuredSelector","connect","CollectionOverviewContainer","CollectionPage","fetchCollectionsStartAsync","selectIsCollectionFetching","selecIsCollectionsLoaded","WithSpinner","CollectionPageWithSpinner","ShopPage","Component","componentDidMount","props","render","match","IsCollectionFetching","isCollectionsLoaded","path","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,wBAAT,QAAyC,UAAzC;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAOC,2BAAP,MAAwC,oEAAxC;AACA,OAAOC,cAAP,MAA2B,0BAA3B;AAEA,SAASC,0BAAT,QAA2C,+BAA3C;AACA,SAASC,0BAAT,EAAqCC,wBAArC,QAAqE,gCAArE;AACA,OAAOC,WAAP,MAAwB,kCAAxB;AAEA,MAAMC,yBAAyB,GAAGD,WAAW,CAACJ,cAAD,CAA7C;;AAEA,MAAMM,QAAN,SAAuBX,KAAK,CAACY,SAA7B,CAAuC;AAEtCC,EAAAA,iBAAiB,GAAE;AAAA,UACVP,0BADU,GACoB,KAAKQ,KADzB,CACVR,0BADU;AAElBA,IAAAA,0BAA0B;AAC1B;;AAEDS,EAAAA,MAAM,GAAE;AAAA,wBACsD,KAAKD,KAD3D;AAAA,UACCE,KADD,eACCA,KADD;AAAA,UACQC,oBADR,eACQA,oBADR;AAAA,UAC8BC,mBAD9B,eAC8BA,mBAD9B;AAEP,WACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,YAAKF,KAAK,CAACG,IAAX,CAAjB;AACA,MAAA,SAAS,EAAIf,2BADb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAGE,oBAAC,KAAD;AAAO,MAAA,IAAI,YAAKY,KAAK,CAACG,IAAX,mBAAX;AACC,MAAA,MAAM,EAAIL,KAAK,IAAK,oBAAC,yBAAD;AAA2B,QAAA,SAAS,EAAG,CAACI;AAAxC,SAAiEJ,KAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,CADF;AASA;;AAlBqC;;AAqBvC,MAAMM,eAAe,GAAGlB,wBAAwB,CAAC;AAChDe,EAAAA,oBAAoB,EAAEV,0BAD0B;AAEhDW,EAAAA,mBAAmB,EAAEV;AAF2B,CAAD,CAAhD;;AAKA,MAAMa,kBAAkB,GAAGC,QAAQ,KAAK;AACvChB,EAAAA,0BAA0B,EAAE,MAAMgB,QAAQ,CAAChB,0BAA0B,EAA3B;AADH,CAAL,CAAnC;;AAIA,eAAeH,OAAO,CAAC,IAAD,EAAOiB,eAAP,EAAuBC,kBAAvB,CAAP,CAAkDV,QAAlD,CAAf","sourcesContent":["import React from 'react';\nimport { Route } from 'react-router-dom';\nimport { createStructuredSelector } from 'reselect';\nimport { connect } from 'react-redux';\n\nimport CollectionOverviewContainer from '../../components/collection-overview/collection-overview-container';\nimport CollectionPage from '../collection/collection';\n\nimport { fetchCollectionsStartAsync } from '../../redux/shop/shop.actions';\nimport { selectIsCollectionFetching, selecIsCollectionsLoaded } from '../../redux/shop/shop.selector';\nimport WithSpinner from '../../components/spinner/spinner';\n\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nclass ShopPage extends React.Component {\n\n\tcomponentDidMount(){\n\t\tconst { fetchCollectionsStartAsync} = this.props;\n\t\tfetchCollectionsStartAsync();\t\t\n\t}\n\n\trender(){\n\t\tconst { match, IsCollectionFetching, isCollectionsLoaded } = this.props;\n\t\treturn (\n\t\t  <div className='shop-page'>\n\t\t    <Route exact path={`${match.path}`} \n\t\t    component = {CollectionOverviewContainer}/>\n\t\t    <Route path={`${match.path}/:collectionId`} \n\t\t     render = {props => (<CollectionPageWithSpinner isLoading ={!isCollectionsLoaded} {...props}/> )}\n\t\t     />\n\t\t  </div>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = createStructuredSelector({\n\tIsCollectionFetching: selectIsCollectionFetching,\n\tisCollectionsLoaded: selecIsCollectionsLoaded\n});\n\nconst mapDispatchToProps = dispatch => ({\n\tfetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync())\n});\n\nexport default connect(null, mapStateToProps,mapDispatchToProps)(ShopPage);"]},"metadata":{},"sourceType":"module"}