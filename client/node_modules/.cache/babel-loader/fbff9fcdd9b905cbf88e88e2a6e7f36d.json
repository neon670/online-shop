{"ast":null,"code":"import _objectSpread from \"/Users/noe/vagrant-lamp/sites/online-store/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { takeLatest, put, all, call } from 'redux-saga/effects';\nimport UserActionTypes from './user-types';\nimport { signInSuccess, signInFailure } from './user.actions';\nimport { auth, googleProvider, createUserProfileDocument } from '../../firebase/firebase.utils';\nexport function* getSnapshotFromUserAuth(userAuth) {\n  try {\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnaphot = yield userRef.get();\n    yield put(signInSuccess(_objectSpread({\n      id: userSnaphot.id\n    }, userSnaphot.data())));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signInWithGoogle() {\n  try {\n    const _ref = yield auth.signInWithPopup(googleProvider),\n          user = _ref.user;\n\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnaphot = yield userRef.get();\n    yield put(signInSuccess(_objectSpread({\n      id: userSnaphot.id\n    }, userSnaphot.data())));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const _ref2 = yield auth.signInWithEmailAndPassword(email, password),\n          user = _ref2.user;\n\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnaphot = yield userRef.get();\n    yield put(signInSuccess(_objectSpread({\n      id: userSnaphot.id\n    }, userSnaphot.data())));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart)]);\n}","map":{"version":3,"sources":["/Users/noe/vagrant-lamp/sites/online-store/src/redux/user/user.saga.js"],"names":["takeLatest","put","all","call","UserActionTypes","signInSuccess","signInFailure","auth","googleProvider","createUserProfileDocument","getSnapshotFromUserAuth","userAuth","userRef","user","userSnaphot","get","id","data","error","signInWithGoogle","signInWithPopup","signInWithEmail","payload","email","password","signInWithEmailAndPassword","onGoogleSignInStart","GOOGLE_SIGN_IN_START","onEmailSignInStart","EMAIL_SIGN_IN_START","userSagas"],"mappings":";AAAA,SAASA,UAAT,EAAqBC,GAArB,EAA0BC,GAA1B,EAA+BC,IAA/B,QAA4C,oBAA5C;AACA,OAAQC,eAAR,MAA8B,cAA9B;AACA,SAASC,aAAT,EAAwBC,aAAxB,QAA4C,gBAA5C;AACA,SAAQC,IAAR,EAAcC,cAAd,EAA8BC,yBAA9B,QAA+D,+BAA/D;AAGA,OAAO,UAAUC,uBAAV,CAAkCC,QAAlC,EAA2C;AACjD,MAAG;AACF,UAAMC,OAAO,GAAG,MAAMT,IAAI,CAACM,yBAAD,EAA4BI,IAA5B,CAA1B;AACC,UAAMC,WAAW,GAAG,MAAMF,OAAO,CAACG,GAAR,EAA1B;AACA,UAAMd,GAAG,CAACI,aAAa;AAAGW,MAAAA,EAAE,EAACF,WAAW,CAACE;AAAlB,OAAyBF,WAAW,CAACG,IAAZ,EAAzB,EAAd,CAAT;AACA,GAJF,CAIG,OAAOC,KAAP,EAAc;AACf,UAAMjB,GAAG,CAACK,aAAa,CAACY,KAAD,CAAd,CAAT;AACA;AACF;AAED,OAAO,UAAUC,gBAAV,GAA4B;AAClC,MAAG;AAAA,iBACa,MAAMZ,IAAI,CAACa,eAAL,CAAqBZ,cAArB,CADnB;AAAA,UACKK,IADL,QACKA,IADL;;AAEF,UAAMD,OAAO,GAAG,MAAMT,IAAI,CAACM,yBAAD,EAA4BI,IAA5B,CAA1B;AACA,UAAMC,WAAW,GAAG,MAAMF,OAAO,CAACG,GAAR,EAA1B;AACA,UAAMd,GAAG,CAACI,aAAa;AAAGW,MAAAA,EAAE,EAACF,WAAW,CAACE;AAAlB,OAAyBF,WAAW,CAACG,IAAZ,EAAzB,EAAd,CAAT;AACA,GALD,CAKE,OAAOC,KAAP,EAAc;AACf,UAAMjB,GAAG,CAACK,aAAa,CAACY,KAAD,CAAd,CAAT;AACA;AACD;AAED,OAAO,UAAUG,eAAV,CAA0B;AAACC,EAAAA,OAAO,EAAE;AAACC,IAAAA,KAAD;AAAQC,IAAAA;AAAR;AAAV,CAA1B,EAAwD;AAC9D,MAAI;AAAA,kBACc,MAAMjB,IAAI,CAACkB,0BAAL,CAAgCF,KAAhC,EAAuCC,QAAvC,CADpB;AAAA,UACKX,IADL,SACKA,IADL;;AAEH,UAAMD,OAAO,GAAG,MAAMT,IAAI,CAACM,yBAAD,EAA4BI,IAA5B,CAA1B;AACA,UAAMC,WAAW,GAAG,MAAMF,OAAO,CAACG,GAAR,EAA1B;AACA,UAAMd,GAAG,CAACI,aAAa;AAAGW,MAAAA,EAAE,EAACF,WAAW,CAACE;AAAlB,OAAyBF,WAAW,CAACG,IAAZ,EAAzB,EAAd,CAAT;AACA,GALD,CAKC,OAAMC,KAAN,EAAY;AACZ,UAAMjB,GAAG,CAACK,aAAa,CAACY,KAAD,CAAd,CAAT;AACA;AACD;AAED,OAAO,UAAUQ,mBAAV,GAA+B;AACrC,QAAM1B,UAAU,CAAEI,eAAe,CAACuB,oBAAlB,EAAwCR,gBAAxC,CAAhB;AACA;AAED,OAAO,UAAUS,kBAAV,GAA8B;AACpC,QAAM5B,UAAU,CAAEI,eAAe,CAACyB,mBAAlB,EAAuCR,eAAvC,CAAhB;AACA;AAED,OAAO,UAAUS,SAAV,GAAqB;AAC3B,QAAM5B,GAAG,CAAC,CAACC,IAAI,CAACuB,mBAAD,CAAL,EAA4BvB,IAAI,CAACyB,kBAAD,CAAhC,CAAD,CAAT;AACA","sourcesContent":["import { takeLatest, put, all, call }  from 'redux-saga/effects' ;\nimport  UserActionTypes  from './user-types';\nimport { signInSuccess, signInFailure} from './user.actions';\nimport {auth, googleProvider, createUserProfileDocument } from '../../firebase/firebase.utils';\n\n\nexport function* getSnapshotFromUserAuth(userAuth){\n\ttry{\n\t\tconst userRef = yield call(createUserProfileDocument, user);\n\t\t\tconst userSnaphot = yield userRef.get();\n\t\t\tyield put(signInSuccess({ id:userSnaphot.id, ...userSnaphot.data()}));\n\t\t} catch (error) {\n\t\t\tyield put(signInFailure(error));\n\t\t}\n}\n\nexport function* signInWithGoogle(){\n\ttry{\n\t\tconst {user} = yield auth.signInWithPopup(googleProvider);\n\t\tconst userRef = yield call(createUserProfileDocument, user);\n\t\tconst userSnaphot = yield userRef.get();\n\t\tyield put(signInSuccess({ id:userSnaphot.id, ...userSnaphot.data()}));\n\t} catch (error) {\n\t\tyield put(signInFailure(error));\n\t}\n}\n\nexport function* signInWithEmail({payload: {email, password }}){\n\ttry {\n\t\tconst { user } = yield auth.signInWithEmailAndPassword(email, password);\n\t\tconst userRef = yield call(createUserProfileDocument, user);\n\t\tconst userSnaphot = yield userRef.get();\n\t\tyield put(signInSuccess({ id:userSnaphot.id, ...userSnaphot.data()}));\n\t}catch(error){\n\t\tyield put(signInFailure(error));\n\t}\n}\n\nexport function* onGoogleSignInStart(){\n\tyield takeLatest (UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle)\n}\n\nexport function* onEmailSignInStart(){\n\tyield takeLatest (UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail)\n}\n\nexport function* userSagas(){\n\tyield all([call(onGoogleSignInStart), call(onEmailSignInStart)]);\n}"]},"metadata":{},"sourceType":"module"}