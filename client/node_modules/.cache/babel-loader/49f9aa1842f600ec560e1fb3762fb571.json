{"ast":null,"code":"import _objectSpread from \"/Users/noe/vagrant-lamp/sites/online-store/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { takeLatest, put, all, call } from 'redux-saga/effects';\nimport UserActionTypes from './user-types';\nimport { signInSuccess, signInFailure, signOutSuccess, signOutFailure } from './user.actions';\nimport { auth, googleProvider, createUserProfileDocument, getCurrentUser } from '../../firebase/firebase.utils';\nexport function* getSnapshotFromUserAuth(userAuth) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth);\n    const userSnaphot = yield userRef.get();\n    yield put(signInSuccess(_objectSpread({\n      id: userSnaphot.id\n    }, userSnaphot.data())));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signInWithGoogle() {\n  try {\n    const _ref = yield auth.signInWithPopup(googleProvider),\n          user = _ref.user;\n\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const _ref2 = yield auth.signInWithEmailAndPassword(email, password),\n          user = _ref2.user;\n\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* isUserAuth() {\n  try {\n    const userAuth = yield getCurrentUser();\n    if (!userAuth) return;\n    yield getSnapshotFromUserAuth(userAuth);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signOut() {\n  try {\n    yield auth.signOut();\n    yield put(signOutSuccess());\n  } catch (error) {\n    yield put(signOutFailure(error));\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* onCheckUserSession() {\n  yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuth);\n}\nexport function* onSignOutStart() {\n  yield takeLatest(UserActionTypes.SIGN_OUT_START, signOut);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart), call(onCheckUserSession), call(onSignOutStart)]);\n}","map":{"version":3,"sources":["/Users/noe/vagrant-lamp/sites/online-store/src/redux/user/user.saga.js"],"names":["takeLatest","put","all","call","UserActionTypes","signInSuccess","signInFailure","signOutSuccess","signOutFailure","auth","googleProvider","createUserProfileDocument","getCurrentUser","getSnapshotFromUserAuth","userAuth","userRef","userSnaphot","get","id","data","error","signInWithGoogle","signInWithPopup","user","signInWithEmail","payload","email","password","signInWithEmailAndPassword","isUserAuth","signOut","onGoogleSignInStart","GOOGLE_SIGN_IN_START","onEmailSignInStart","EMAIL_SIGN_IN_START","onCheckUserSession","CHECK_USER_SESSION","onSignOutStart","SIGN_OUT_START","userSagas"],"mappings":"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","sourcesContent":["import { takeLatest, put, all, call }  from 'redux-saga/effects' ;\nimport  UserActionTypes  from './user-types';\nimport { signInSuccess, signInFailure,signOutSuccess, signOutFailure} from './user.actions';\nimport {auth, googleProvider, createUserProfileDocument, getCurrentUser} from '../../firebase/firebase.utils';\n\n\nexport function* getSnapshotFromUserAuth(userAuth){\n\ttry{\n\t\tconst userRef = yield call(createUserProfileDocument, userAuth);\n\t\t\tconst userSnaphot = yield userRef.get();\n\t\t\tyield put(signInSuccess({ id:userSnaphot.id, ...userSnaphot.data()}));\n\t\t} catch (error) {\n\t\t\tyield put(signInFailure(error));\n\t}\n}\n\nexport function* signInWithGoogle(){\n\ttry{\n\t\tconst {user} = yield auth.signInWithPopup(googleProvider);\n\t\tyield getSnapshotFromUserAuth(user);\n\t} catch (error) {\n\t\tyield put(signInFailure(error));\n\t}\n}\n\nexport function* signInWithEmail({payload: {email, password }}){\n\ttry {\n\t\tconst { user } = yield auth.signInWithEmailAndPassword(email, password);\n\t\tyield getSnapshotFromUserAuth(user);\n\t}catch(error){\n\t\tyield put(signInFailure(error));\n\t}\n}\n\nexport function* isUserAuth(){\n\ttry{\n\t\tconst userAuth = yield getCurrentUser();\n\t\tif(!userAuth) return;\n\t\tyield getSnapshotFromUserAuth(userAuth);\n\t}catch(error){\n\t\tyield put(signInFailure(error));\n\t}\n}\n\nexport function* signOut(){\n\ttry{\n\t\tyield auth.signOut();\n\t\tyield  put(signOutSuccess());\n\t}catch(error){\n\t\tyield put(signOutFailure(error))\n\t}\n}\n\nexport function* onGoogleSignInStart(){\n\tyield takeLatest (UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle)\n}\n\nexport function* onEmailSignInStart(){\n\tyield takeLatest (UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail)\n}\n\nexport function* onCheckUserSession(){\n\tyield takeLatest (UserActionTypes.CHECK_USER_SESSION, isUserAuth)\n}\n\nexport function* onSignOutStart(){\n\tyield takeLatest (UserActionTypes.SIGN_OUT_START, signOut)\n}\n\nexport function* userSagas(){\n\tyield all([call(onGoogleSignInStart), \n\t\t\t   call(onEmailSignInStart), \n\t\t\t   call(onCheckUserSession),\n\t\t\t   call(onSignOutStart)]);\n}"]},"metadata":{},"sourceType":"module"}