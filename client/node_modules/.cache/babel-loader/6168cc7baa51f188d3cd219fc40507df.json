{"ast":null,"code":"import _objectSpread from \"/Users/noe/vagrant-lamp/sites/online-store/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { takeLatest, put, all, call } from 'redux-saga/effects';\nimport UserActionTypes from './user-types';\nimport { signInSuccess, signInFailure } from './user.actions';\nimport { auth, googleProvider, createUserProfileDocument } from '../../firebase/firebase.utils';\nexport function* signInWithGoogle() {\n  try {\n    const _ref = yield auth.signInWithPopup(googleProvider),\n          user = _ref.user;\n\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnaphot = yield userRef.get();\n    yield put(googleSignInSuccess(_objectSpread({\n      id: userSnaphot.id\n    }, userSnaphot.data())));\n  } catch (error) {\n    yield put(googleSignInFailure(error));\n  }\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const _ref2 = yield auth.signInWithEmailAndPassword(email, password),\n          user = _ref2.user;\n\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnaphot = yield userRef.get();\n    yield put(emailSignInSuccess(_objectSpread({\n      id: userSnaphot.id\n    }, userSnaphot.data())));\n  } catch (error) {\n    yield put(emailSignInFailure(error));\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart)]);\n}","map":{"version":3,"sources":["/Users/noe/vagrant-lamp/sites/online-store/src/redux/user/user.saga.js"],"names":["takeLatest","put","all","call","UserActionTypes","signInSuccess","signInFailure","auth","googleProvider","createUserProfileDocument","signInWithGoogle","signInWithPopup","user","userRef","userSnaphot","get","googleSignInSuccess","id","data","error","googleSignInFailure","signInWithEmail","payload","email","password","signInWithEmailAndPassword","emailSignInSuccess","emailSignInFailure","onGoogleSignInStart","GOOGLE_SIGN_IN_START","onEmailSignInStart","EMAIL_SIGN_IN_START","userSagas"],"mappings":";AAAA,SAASA,UAAT,EAAqBC,GAArB,EAA0BC,GAA1B,EAA+BC,IAA/B,QAA4C,oBAA5C;AACA,OAAQC,eAAR,MAA8B,cAA9B;AACA,SAASC,aAAT,EAAwBC,aAAxB,QAA4C,gBAA5C;AACA,SAAQC,IAAR,EAAcC,cAAd,EAA8BC,yBAA9B,QAA+D,+BAA/D;AAGA,OAAO,UAAUC,gBAAV,GAA4B;AAClC,MAAG;AAAA,iBACa,MAAMH,IAAI,CAACI,eAAL,CAAqBH,cAArB,CADnB;AAAA,UACKI,IADL,QACKA,IADL;;AAEF,UAAMC,OAAO,GAAG,MAAMV,IAAI,CAACM,yBAAD,EAA4BG,IAA5B,CAA1B;AACA,UAAME,WAAW,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA1B;AACA,UAAMd,GAAG,CAACe,mBAAmB;AAAGC,MAAAA,EAAE,EAACH,WAAW,CAACG;AAAlB,OAAyBH,WAAW,CAACI,IAAZ,EAAzB,EAApB,CAAT;AACA,GALD,CAKE,OAAOC,KAAP,EAAc;AACf,UAAMlB,GAAG,CAACmB,mBAAmB,CAACD,KAAD,CAApB,CAAT;AACA;AACD;AAED,OAAO,UAAUE,eAAV,CAA0B;AAACC,EAAAA,OAAO,EAAE;AAACC,IAAAA,KAAD;AAAQC,IAAAA;AAAR;AAAV,CAA1B,EAAwD;AAC9D,MAAI;AAAA,kBACc,MAAMjB,IAAI,CAACkB,0BAAL,CAAgCF,KAAhC,EAAuCC,QAAvC,CADpB;AAAA,UACKZ,IADL,SACKA,IADL;;AAEH,UAAMC,OAAO,GAAG,MAAMV,IAAI,CAACM,yBAAD,EAA4BG,IAA5B,CAA1B;AACA,UAAME,WAAW,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA1B;AACA,UAAMd,GAAG,CAACyB,kBAAkB;AAAGT,MAAAA,EAAE,EAACH,WAAW,CAACG;AAAlB,OAAyBH,WAAW,CAACI,IAAZ,EAAzB,EAAnB,CAAT;AACA,GALD,CAKC,OAAMC,KAAN,EAAY;AACZ,UAAMlB,GAAG,CAAC0B,kBAAkB,CAACR,KAAD,CAAnB,CAAT;AACA;AACD;AAED,OAAO,UAAUS,mBAAV,GAA+B;AACrC,QAAM5B,UAAU,CAAEI,eAAe,CAACyB,oBAAlB,EAAwCnB,gBAAxC,CAAhB;AACA;AAED,OAAO,UAAUoB,kBAAV,GAA8B;AACpC,QAAM9B,UAAU,CAAEI,eAAe,CAAC2B,mBAAlB,EAAuCV,eAAvC,CAAhB;AACA;AAED,OAAO,UAAUW,SAAV,GAAqB;AAC3B,QAAM9B,GAAG,CAAC,CAACC,IAAI,CAACyB,mBAAD,CAAL,EAA4BzB,IAAI,CAAC2B,kBAAD,CAAhC,CAAD,CAAT;AACA","sourcesContent":["import { takeLatest, put, all, call }  from 'redux-saga/effects' ;\nimport  UserActionTypes  from './user-types';\nimport { signInSuccess, signInFailure} from './user.actions';\nimport {auth, googleProvider, createUserProfileDocument } from '../../firebase/firebase.utils';\n\n\nexport function* signInWithGoogle(){\n\ttry{\n\t\tconst {user} = yield auth.signInWithPopup(googleProvider);\n\t\tconst userRef = yield call(createUserProfileDocument, user);\n\t\tconst userSnaphot = yield userRef.get();\n\t\tyield put(googleSignInSuccess({ id:userSnaphot.id, ...userSnaphot.data()}));\n\t} catch (error) {\n\t\tyield put(googleSignInFailure(error));\n\t}\n}\n\nexport function* signInWithEmail({payload: {email, password }}){\n\ttry {\n\t\tconst { user } = yield auth.signInWithEmailAndPassword(email, password);\n\t\tconst userRef = yield call(createUserProfileDocument, user);\n\t\tconst userSnaphot = yield userRef.get();\n\t\tyield put(emailSignInSuccess({ id:userSnaphot.id, ...userSnaphot.data()}));\n\t}catch(error){\n\t\tyield put(emailSignInFailure(error));\n\t}\n}\n\nexport function* onGoogleSignInStart(){\n\tyield takeLatest (UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle)\n}\n\nexport function* onEmailSignInStart(){\n\tyield takeLatest (UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail)\n}\n\nexport function* userSagas(){\n\tyield all([call(onGoogleSignInStart), call(onEmailSignInStart)]);\n}"]},"metadata":{},"sourceType":"module"}