{"ast":null,"code":"var _jsxFileName = \"/Users/noe/vagrant-lamp/sites/online-store/src/components/sign-in/sign-in.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport FormInput from '../form-input/form-input';\nimport CustomButton from '../custom-button/custom-button';\nimport { googleSignInStart, emailSignInstart } from '../../redux/user/user.actions';\nimport './sign-in.scss';\n\nclass SignIn extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = async event => {\n      event.preventDefault();\n      const _this$state = this.state,\n            email = _this$state.email,\n            password = _this$state.password;\n      const emailSignInstart = this.props.emailSignInstart;\n      emailSignInstart(email, password); // try{\n      // \tawait auth.signInWithEmailAndPassword(email, password);\n      // }catch(error){\n      // }\n      // this.setState({ email: '', password:''});\n    };\n\n    this.handleChange = event => {\n      const _event$target = event.target,\n            value = _event$target.value,\n            name = _event$target.name;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.state = {\n      email: '',\n      password: ''\n    };\n  }\n\n  render() {\n    const googleSignInStart = this.props.googleSignInStart;\n    return React.createElement(\"div\", {\n      className: \"sign-in\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, \"Sign in with your email and password\"), React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(FormInput, {\n      name: \"email\",\n      value: this.state.email,\n      handleChange: this.handleChange,\n      label: \"email\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }), React.createElement(FormInput, {\n      name: \"password\",\n      value: this.state.password,\n      handleChange: this.handleChange,\n      label: \"password\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"buttons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(CustomButton, {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \"Sign In\"), React.createElement(CustomButton, {\n      type: \"button\",\n      onClick: googleSignInStart,\n      isGoogleSignIn: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, ' ', \"Sign in with Google\", ' '))));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  googleSignInStart: () => dispatch(googleSignInStart()),\n  emailSignInstart: (email, password) => dispatch(emailSignInstart({\n    email,\n    password\n  }))\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);","map":{"version":3,"sources":["/Users/noe/vagrant-lamp/sites/online-store/src/components/sign-in/sign-in.jsx"],"names":["React","connect","FormInput","CustomButton","googleSignInStart","emailSignInstart","SignIn","Component","constructor","props","handleSubmit","event","preventDefault","state","email","password","handleChange","target","value","name","setState","render","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport FormInput from '../form-input/form-input';\nimport CustomButton from '../custom-button/custom-button';\n\nimport { googleSignInStart, emailSignInstart } from '../../redux/user/user.actions';\n\nimport './sign-in.scss';\n\nclass SignIn extends React.Component{\n\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.state ={\n\t\t\temail: '',\n\t\t\tpassword: ''\n\t\t}\n\t}\n\n\thandleSubmit = async event => {\n\t\tevent.preventDefault();\n\t\tconst { email, password } = this.state;\n\t\tconst { emailSignInstart } = this.props;\n\n\t\temailSignInstart(email, password);\n\t\t// try{\n\t\t// \tawait auth.signInWithEmailAndPassword(email, password);\n\t\t// }catch(error){\n\n\t\t// }\n\t\t// this.setState({ email: '', password:''});\n\t}\n\thandleChange = event => {\n\t\tconst { value, name } = event.target;\n\t\tthis.setState({[name]: value})\n\t}\n\trender(){\n\t\tconst { googleSignInStart } = this.props;\n\t\treturn(\n\t\t\t<div className='sign-in'>\n\t\t\t<span>Sign in with your email and password</span>\n\n\t\t\t<form onSubmit={this.handleSubmit}>\n\t\t\t\n\t\t\t\t<FormInput name=\"email\" value={this.state.email} \n\t\t\t\thandleChange= { this.handleChange } label='email' required \n\t\t\t\t/>\n\t\t\t\t\n\t\t\t\t<FormInput name=\"password\" value={this.state.password} \n\t\t\t\thandleChange={ this.handleChange } label='password' required \n\t\t\t\t/>\n\t\t\t\t\n\t\t\t\t<div className='buttons'>\n\t\t\t\t\t<CustomButton type=\"submit\">Sign In</CustomButton>\n\t\t\t\t\t<CustomButton type ='button' onClick={googleSignInStart} isGoogleSignIn>\n\t\t\t\t\t\t{' '}\n\t\t\t\t\t\tSign in with Google{' '}\n\t\t\t\t\t</CustomButton>\n\t\t\t\t</div>\n\t\t\t</form>\n\t\t\t</div>\n\t\t);\n\t}\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n\tgoogleSignInStart: () => dispatch(googleSignInStart()),\n\temailSignInstart: (email, password) => dispatch(emailSignInstart({email, password}))\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);"]},"metadata":{},"sourceType":"module"}