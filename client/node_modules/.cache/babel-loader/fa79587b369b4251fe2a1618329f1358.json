{"ast":null,"code":"import _objectSpread from \"/Users/noe/vagrant-lamp/sites/online-store/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Users/noe/vagrant-lamp/sites/online-store/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/noe/vagrant-lamp/sites/online-store/src/components/sign-in/sign-in.jsx\";\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport FormInput from '../form-input/form-input';\nimport CustomButton from '../custom-button/custom-button';\nimport { googleSignInStart, emailSignInStart } from '../../redux/user/user.actions';\nimport './sign-in.scss';\n\nconst SignIn = ({\n  emailSignInStart,\n  googleSignInStart\n}) => {\n  const _userState = userState({\n    email: '',\n    password: ''\n  }),\n        _userState2 = _slicedToArray(_userState, 2),\n        userCredentials = _userState2[0],\n        setCredentials = _userState2[1];\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const email = userCredentials.email,\n          password = userCredentials.password;\n    emailSignInStart(email, password); // try{\n    // \tawait auth.signInWithEmailAndPassword(email, password);\n    // }catch(error){\n    // }\n    // this.setState({ email: '', password:''});\n  };\n\n  const handleChange = event => {\n    const _event$target = event.target,\n          value = _event$target.value,\n          name = _event$target.name;\n    setCredentials(_objectSpread({}, userCredentials, {\n      [name]: value\n    }));\n  };\n\n  return React.createElement(\"div\", {\n    className: \"sign-in\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \"Sign in with your email and password\"), React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(FormInput, {\n    name: \"email\",\n    value: this.state.email,\n    handleChange: handleChange,\n    label: \"email\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }), React.createElement(FormInput, {\n    name: \"password\",\n    value: this.state.password,\n    handleChange: this.handleChange,\n    label: \"password\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"buttons\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(CustomButton, {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"Sign In\"), React.createElement(CustomButton, {\n    type: \"button\",\n    onClick: googleSignInStart,\n    isGoogleSignIn: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, ' ', \"Sign in with Google\", ' '))));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  googleSignInStart: () => dispatch(googleSignInStart()),\n  emailSignInStart: (email, password) => dispatch(emailSignInStart({\n    email,\n    password\n  }))\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);","map":{"version":3,"sources":["/Users/noe/vagrant-lamp/sites/online-store/src/components/sign-in/sign-in.jsx"],"names":["React","useState","connect","FormInput","CustomButton","googleSignInStart","emailSignInStart","SignIn","userState","email","password","userCredentials","setCredentials","handleSubmit","event","preventDefault","handleChange","target","value","name","state","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState }from 'react';\nimport { connect } from 'react-redux';\nimport FormInput from '../form-input/form-input';\nimport CustomButton from '../custom-button/custom-button';\n\nimport { googleSignInStart, emailSignInStart } from '../../redux/user/user.actions';\n\nimport './sign-in.scss';\n\nconst SignIn = ({emailSignInStart, googleSignInStart}) => {\n\tconst [userCredentials, setCredentials] = userState({email:'', password:''})\n\t\n\n\tconst handleSubmit = async event => {\n\t\tevent.preventDefault();\n\t\tconst { email, password } = userCredentials;\n\n\t\temailSignInStart(email, password);\n\t\t// try{\n\t\t// \tawait auth.signInWithEmailAndPassword(email, password);\n\t\t// }catch(error){\n\n\t\t// }\n\t\t// this.setState({ email: '', password:''});\n\t};\n\n\tconst handleChange = event => {\n\t\tconst { value, name } = event.target;\n\t\tsetCredentials({...userCredentials,[name]: value})\n\t}\n\t\n\t\t\n\t\treturn(\n\t\t\t<div className='sign-in'>\n\t\t\t<span>Sign in with your email and password</span>\n\n\t\t\t<form onSubmit={handleSubmit}>\n\t\t\t\n\t\t\t\t<FormInput name=\"email\" value={this.state.email} \n\t\t\t\thandleChange= { handleChange } label='email' required \n\t\t\t\t/>\n\t\t\t\t\n\t\t\t\t<FormInput name=\"password\" value={this.state.password} \n\t\t\t\thandleChange={ this.handleChange } label='password' required \n\t\t\t\t/>\n\t\t\t\t\n\t\t\t\t<div className='buttons'>\n\t\t\t\t\t<CustomButton type=\"submit\">Sign In</CustomButton>\n\t\t\t\t\t<CustomButton type ='button' onClick={googleSignInStart} isGoogleSignIn>\n\t\t\t\t\t\t{' '}\n\t\t\t\t\t\tSign in with Google{' '}\n\t\t\t\t\t</CustomButton>\n\t\t\t\t</div>\n\t\t\t</form>\n\t\t\t</div>\n\t\t);\n\t\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n\tgoogleSignInStart: () => dispatch(googleSignInStart()),\n\temailSignInStart: (email, password) => dispatch(emailSignInStart({email, password}))\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);"]},"metadata":{},"sourceType":"module"}